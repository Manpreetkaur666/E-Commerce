FLOW OF APP OR ROUTES
   -Define route in app.js for each controller using app.use
   -Route File - further endpoints of that specific route and call controller for the get,post,etc 
   -Controller File - to add functionality and call models


1) ERROR HANDLING

-There are number of if else statements so we make Errorhandle class to catch any errors and can
used it again.
we have to make middleware to use this class in errorhandling
-Unhandled Promise Rejection
-Uncaught Exception
-Cast Error for mongodb

2) ADDING SEARCH, FILTER AND PAGINATION
3) USER AUTHENTICATION
-packages
     -bcryptjs - to store the data in hash so nobody can read
     -jsonwebtoken -  to authenticate user using tokens
     -validator - to validate the fields eg., only accept email format in email field
     -nodemailer - to reset passwords like sending OTPs
     -cookie-parser - to store jsonwebtoken because if we store in local stiorage anybody can   access it which is not secure.
     -body-parser - in order to read HTTP POST data , we have to use "body-parser" node module. body-parser is a piece of express middleware that reads a form's input and stores it as a javascript object accessible through req.body 

4) Encrypt the password before saving to database.
    -pre - when we use bcrypt, we need to hash the password before (pre) add it to the database, so this process done pre-save, not after(post) save, we cannot hash password after save it, it hashed before save.(models/User.js)
5) Reset password
    - crypto is built in module
    Crypto-JS is a growing collection of standard and secure cryptographic algorithms implemented in JavaScript using best practices and patterns. They are fast, and they have a consistent and simple interface. Algorithms: MD5, SHA-1, SHA-256, AES, DES, Rabbit, MARC4, HMAC (HMAC-MD5, HMAC-SHA1, HMAC-SHA256) PBKDF2.

NOTE: \n\n means line break of 2lines
SMTP: Simple Mail Transfer Protocol - is an Internet standard communication protocol for electronic mail transmission. Mail servers and other message transfer agents use SMTP to send and receive mail messages


FRONTEND

1) Install React app
  - npx create-react-app .
  (.) means install in the selected folder directly without any naming.
  - npm axios - to fetch data from backend
  - react-alert
  - react-alert-template-basic
  - react-helmet - to pass dynamic title
  - react-redux
  - redux
  - redux-thunk - helps to execute asynchronous function
  - redux-devtools-extension
  - react-router-dom
  - overlay-navbar
  - react-icons
  - webfontloader

2) Bootstrap

    The items within the navbar can be aligned using margin utilities.
    mx-auto class can be used to align the items to the center of the navbar.
    ms-auto class is used to align items to the right of the navbar.
    me-auto class is used to align items to the left of that navbar.

3) redux
   
  - Import Provider in index.js to use store (see index.js file)
  - We have to take care of 3 things while using redux.
      -reducer
      -actions
      -contants (this is not mandatory but good to use)
  - Reducer take 2 things 
      - state
      - action 
  - View -> Action -> Reducer -> Store -> View
  
            
Note: MAC TERMINAL COMMANDS
    -cd ..   # one up
    -cd ../  # two up
    -cd      # home directory 
    -cd /    # root directory

    -trim - it remove spaces
    -useHistory is replaced by useNavigation in react-router-dom.

4) MUTABLE VS IMMUTABLE

 - A mutable value is one that can be changed without creating an entirely new value. In JavaScript, objects and arrays are mutable by default, but primitive values are not â€” once a primitive value is created, it cannot be changed, although the variable that holds it may be reassigned.
 - Mutable is a type of variable that can be changed. In javascript, only Array and Objects are mutable other primitive data types are immutable. If we can not change a variable's state then that variable is immutable. So in javascript Numbers and strings are immutable.

5) FILEREADER

  - The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.
  
    EMPTY	0	No data has been loaded yet.
    LOADING	1	Data is currently being loaded.
    DONE	2	The entire read request has been completed.

6) NPM Installations
  
  - npm i express-fileupload: Simple express middleware for uploading files.
  - npm i cloudinary: The Cloudinary Node SDK allows you to quickly and easily integrate your application with Cloudinary. Effortlessly optimize, transform, upload and manage your cloud's assets.

  - cloudinary (add in backend) : Cloudinary is a SaaS technology company headquartered in Santa Clara, California, with offices in Israel, England, Poland, and Singapore. The company provides cloud-based image and video management services. It enables users to upload, store, manage, manipulate, and deliver images and video for websites and apps.

7) mui-SpeedDialIcon- for profile icona nd drop-down
   mui- backdrop - to blur the background when icon is selceted.
    

8) Issue of Protected Routes : When reload the profile page, Component reloads before profile pic url loads which gives an error. So, One way is use isAuthenticated condition in App.js but Instead of using this again and again we will one component for Protected Route which we can use instade of <Route> in App.js.

9) Inline Functions

Refer this - https://www.velotio.com/engineering-blog/inline-function-performance-in-react-applications

difference between onClick={() => onClose} and onClick={onClose}? 